{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\INTERN\\\\Documents\\\\Practice\\\\eleksPractice\\\\moviesapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\INTERN\\\\Documents\\\\Practice\\\\eleksPractice\\\\moviesapp\\\\src\\\\components\\\\Catalog.js\";\nimport React from 'react';\nimport API from '../API';\nimport './styles/Catalog.css';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItem from './ListItem';\n\nclass Catalog extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      settings: {\n        sorting: localStorage.getItem('sorting') || 'trending',\n        page: localStorage.getItem('page') || 1,\n        searchQuery: ''\n      },\n      data: []\n    };\n\n    this.changeData = ({\n      results\n    }) => {\n      this.setState({\n        data: results\n      });\n    };\n\n    this.changeSettings = (update = {}) => {\n      this.setState(prevState => ({\n        settings: _objectSpread({}, prevState.settings, {}, update)\n      }));\n    };\n\n    this.searchOnEnter = e => {\n      const searchQuery = e.target.value;\n      if (e.keyCode !== 13) return;\n      this.changeSettings({\n        searchQuery\n      });\n    };\n\n    this.fetchData = () => {\n      if (this.state.searchQuery) {\n        API.getMovieByQuery(1, this.state.searchQuery).then(this.changeData);\n      } else {\n        if (this.state.sorting === 'trending') API.getTrending(1).then(this.changeData);\n        if (this.state.sorting === 'popular') API.getPopular(1).then(this.changeData);\n        if (this.state.sorting === 'top') API.getTopRated(1).then(this.changeData);\n      }\n    };\n\n    this.onSelectChange = e => {\n      localStorage.setItem('sorting', e.target.value);\n      this.changeSettings({\n        sorting: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log('mount');\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.settings !== prevState.settings) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          _this$state$settings = _this$state.settings,\n          searchQuery = _this$state$settings.searchQuery,\n          sorting = _this$state$settings.sorting;\n    return React.createElement(\"div\", {\n      className: \"Catalog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Search\",\n      defaultValue: searchQuery,\n      onKeyUp: this.searchOnEnter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Select, {\n      disabled: !!searchQuery,\n      onChange: this.onSelectChange,\n      value: sorting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"trending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"trending\"), React.createElement(MenuItem, {\n      value: \"popular\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"popular\"), React.createElement(MenuItem, {\n      value: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"top\"))), React.createElement(\"div\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, data.map(movie => React.createElement(ListItem, {\n      movie: movie,\n      key: movie.id,\n      history: this.props.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Catalog;","map":{"version":3,"sources":["C:/Users/INTERN/Documents/Practice/eleksPractice/moviesapp/src/components/Catalog.js"],"names":["React","API","TextField","Select","MenuItem","ListItem","Catalog","Component","state","settings","sorting","localStorage","getItem","page","searchQuery","data","changeData","results","setState","changeSettings","update","prevState","searchOnEnter","e","target","value","keyCode","fetchData","getMovieByQuery","then","getTrending","getPopular","getTopRated","onSelectChange","setItem","componentDidMount","console","log","componentDidUpdate","prevProps","render","map","movie","id","props","history"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,OAAO,EAAEC,YAAY,CAACC,OAAb,CAAqB,SAArB,KAAmC,UADpC;AAERC,QAAAA,IAAI,EAAEF,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,CAF9B;AAGRE,QAAAA,WAAW,EAAE;AAHL,OADJ;AAMNC,MAAAA,IAAI,EAAE;AANA,KAD4B;;AAAA,SAqBpCC,UArBoC,GAqBvB,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAiB;AAC5B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAEE;AAAR,OAAd;AACD,KAvBmC;;AAAA,SAyBpCE,cAzBoC,GAyBnB,CAACC,MAAM,GAAG,EAAV,KAAiB;AAChC,WAAKF,QAAL,CAAcG,SAAS,KAAK;AAC1BZ,QAAAA,QAAQ,oBACHY,SAAS,CAACZ,QADP,MAEHW,MAFG;AADkB,OAAL,CAAvB;AAMD,KAhCmC;;AAAA,SAkCpCE,aAlCoC,GAkCpBC,CAAC,IAAI;AACnB,YAAMT,WAAW,GAAGS,CAAC,CAACC,MAAF,CAASC,KAA7B;AACA,UAAIF,CAAC,CAACG,OAAF,KAAc,EAAlB,EAAsB;AAEtB,WAAKP,cAAL,CAAoB;AAAEL,QAAAA;AAAF,OAApB;AACD,KAvCmC;;AAAA,SAyCpCa,SAzCoC,GAyCxB,MAAM;AAChB,UAAI,KAAKnB,KAAL,CAAWM,WAAf,EAA4B;AAC1Bb,QAAAA,GAAG,CAAC2B,eAAJ,CAAoB,CAApB,EAAuB,KAAKpB,KAAL,CAAWM,WAAlC,EAA+Ce,IAA/C,CAAoD,KAAKb,UAAzD;AACD,OAFD,MAEO;AACL,YAAI,KAAKR,KAAL,CAAWE,OAAX,KAAuB,UAA3B,EAAuCT,GAAG,CAAC6B,WAAJ,CAAgB,CAAhB,EAAmBD,IAAnB,CAAwB,KAAKb,UAA7B;AACvC,YAAI,KAAKR,KAAL,CAAWE,OAAX,KAAuB,SAA3B,EAAsCT,GAAG,CAAC8B,UAAJ,CAAe,CAAf,EAAkBF,IAAlB,CAAuB,KAAKb,UAA5B;AACtC,YAAI,KAAKR,KAAL,CAAWE,OAAX,KAAuB,KAA3B,EAAkCT,GAAG,CAAC+B,WAAJ,CAAgB,CAAhB,EAAmBH,IAAnB,CAAwB,KAAKb,UAA7B;AACnC;AACF,KAjDmC;;AAAA,SAmDpCiB,cAnDoC,GAmDnBV,CAAC,IAAI;AACpBZ,MAAAA,YAAY,CAACuB,OAAb,CAAqB,SAArB,EAAgCX,CAAC,CAACC,MAAF,CAASC,KAAzC;AACA,WAAKN,cAAL,CAAoB;AAAET,QAAAA,OAAO,EAAEa,CAAC,CAACC,MAAF,CAASC;AAApB,OAApB;AACD,KAtDmC;AAAA;;AAUpCU,EAAAA,iBAAiB,GAAI;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAAKV,SAAL;AACD;;AAEDW,EAAAA,kBAAkB,CAAEC,SAAF,EAAalB,SAAb,EAAwB;AACxC,QAAI,KAAKb,KAAL,CAAWC,QAAX,KAAwBY,SAAS,CAACZ,QAAtC,EAAgD;AAC9C,WAAKkB,SAAL;AACD;AACF;;AAqCDa,EAAAA,MAAM,GAAG;AAAA,wBAC8C,KAAKhC,KADnD;AAAA,UACCO,IADD,eACCA,IADD;AAAA,6CACON,QADP;AAAA,UACmBK,WADnB,wBACmBA,WADnB;AAAA,UACgCJ,OADhC,wBACgCA,OADhC;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,YAAY,EAAEI,WAFhB;AAGE,MAAA,OAAO,EAAE,KAAKQ,aAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE,CAAC,CAACR,WADd;AAEE,MAAA,QAAQ,EAAE,KAAKmB,cAFjB;AAGE,MAAA,KAAK,EAAEvB,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAQE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,EAWE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,CANF,CADF,EAuBE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIK,IAAI,CAAC0B,GAAL,CAASC,KAAK,IACZ,oBAAC,QAAD;AACE,MAAA,KAAK,EAAEA,KADT;AAEE,MAAA,GAAG,EAAEA,KAAK,CAACC,EAFb;AAGE,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CAvBF,CADF;AAqCD;;AAhGmC;;AAmGtC,eAAevC,OAAf","sourcesContent":["import React from 'react';\r\nimport API from '../API'\r\nimport './styles/Catalog.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItem from './ListItem';\r\n\r\nclass Catalog extends React.Component {\r\n  state = {\r\n    settings: {\r\n      sorting: localStorage.getItem('sorting') || 'trending',\r\n      page: localStorage.getItem('page') || 1,\r\n      searchQuery: ''\r\n    },\r\n    data: []\r\n  };\r\n\r\n  componentDidMount () {\r\n    console.log('mount');\r\n    this.fetchData();\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState) {\r\n    if (this.state.settings !== prevState.settings) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  changeData = ({ results }) => {\r\n    this.setState({ data: results });\r\n  }\r\n\r\n  changeSettings = (update = {}) => {\r\n    this.setState(prevState => ({\r\n      settings: {\r\n        ...prevState.settings,\r\n        ...update\r\n      }\r\n    }))\r\n  }\r\n\r\n  searchOnEnter = e => {\r\n    const searchQuery = e.target.value;\r\n    if (e.keyCode !== 13) return;\r\n\r\n    this.changeSettings({ searchQuery });\r\n  }\r\n\r\n  fetchData = () => {\r\n    if (this.state.searchQuery) {\r\n      API.getMovieByQuery(1, this.state.searchQuery).then(this.changeData);\r\n    } else {\r\n      if (this.state.sorting === 'trending') API.getTrending(1).then(this.changeData);\r\n      if (this.state.sorting === 'popular') API.getPopular(1).then(this.changeData);\r\n      if (this.state.sorting === 'top') API.getTopRated(1).then(this.changeData);\r\n    }\r\n  }\r\n\r\n  onSelectChange = e => {\r\n    localStorage.setItem('sorting', e.target.value);\r\n    this.changeSettings({ sorting: e.target.value })\r\n  }\r\n\r\n  render() {\r\n    const { data, settings: { searchQuery, sorting } } = this.state;\r\n\r\n    return (\r\n      <div className=\"Catalog\">\r\n        <div className=\"filters\">\r\n          <TextField\r\n            label=\"Search\"\r\n            defaultValue={searchQuery}\r\n            onKeyUp={this.searchOnEnter}\r\n          />\r\n          <Select\r\n            disabled={!!searchQuery}\r\n            onChange={this.onSelectChange}\r\n            value={sorting}\r\n          >\r\n            <MenuItem value=\"trending\">\r\n              trending\r\n            </MenuItem>\r\n            <MenuItem value=\"popular\">\r\n              popular\r\n            </MenuItem>\r\n            <MenuItem value=\"top\">\r\n              top\r\n            </MenuItem>\r\n          </Select>\r\n        </div>\r\n        <div className=\"list\">\r\n          {\r\n            data.map(movie => (\r\n              <ListItem\r\n                movie={movie}\r\n                key={movie.id}\r\n                history={this.props.history}\r\n              />\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Catalog;\r\n"]},"metadata":{},"sourceType":"module"}