{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\INTERN\\\\Documents\\\\Practice\\\\eleksPractice\\\\moviesapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\INTERN\\\\Documents\\\\Practice\\\\eleksPractice\\\\moviesapp\\\\src\\\\components\\\\Catalog.js\";\nimport debounce from 'lodash/debounce';\nimport React from 'react';\nimport API from '../API';\nimport './styles/Catalog.css';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItem from './ListItem';\nconst TRENDING = 'trending';\nconst POPULAR = 'popular';\nconst TOP = 'top';\nconst REQUEST_MAP = {\n  [TRENDING]: API.getTrending,\n  [POPULAR]: API.getPopular,\n  [TOP]: API.getTopRated\n};\n\nclass Catalog extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tempSearchQuery: '',\n      settings: {\n        sorting: localStorage.getItem('sorting') || 'trending',\n        page: localStorage.getItem('page') || 1,\n        searchQuery: ''\n      },\n      data: []\n    };\n\n    this.changeData = ({\n      results\n    }) => {\n      this.setState({\n        data: results\n      });\n    };\n\n    this.changeSettings = (update = {}) => {\n      this.setState(prevState => ({\n        settings: _objectSpread({}, prevState.settings, {\n          page: 1\n        }, update)\n      }));\n    };\n\n    this.onChange = searchQuery => {\n      this.changeSettings({\n        searchQuery\n      });\n    };\n\n    this.onChangeDebounced = debounce(this.onChange, 3000);\n\n    this.onTextChange = e => {\n      this.setState({\n        tempSearchQuery: e.target.value\n      });\n      this.onChangeDebounced(e.target.value);\n    };\n\n    this.fetchData = () => {\n      const _this$state$settings = this.state.settings,\n            searchQuery = _this$state$settings.searchQuery,\n            sorting = _this$state$settings.sorting,\n            page = _this$state$settings.page;\n\n      if (searchQuery) {\n        API.getMovieByQuery(page, searchQuery).then(this.changeData);\n      } else {\n        const requestFunc = REQUEST_MAP[sorting];\n\n        if (requestFunc) {\n          requestFunc(page).then(this.changeData);\n        }\n      }\n    };\n\n    this.onSelectChange = e => {\n      localStorage.setItem('sorting', e.target.value);\n      this.changeSettings({\n        sorting: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.settings !== prevState.settings) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          tempSearchQuery = _this$state.tempSearchQuery,\n          data = _this$state.data,\n          _this$state$settings2 = _this$state.settings,\n          searchQuery = _this$state$settings2.searchQuery,\n          sorting = _this$state$settings2.sorting;\n    return React.createElement(\"div\", {\n      className: \"Catalog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Search\",\n      value: tempSearchQuery,\n      onChange: this.onTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Select, {\n      disabled: !!searchQuery,\n      onChange: this.onSelectChange,\n      value: sorting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"trending\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"trending\"), React.createElement(MenuItem, {\n      value: \"popular\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"popular\"), React.createElement(MenuItem, {\n      value: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"top\"))), React.createElement(\"div\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, data.map(movie => React.createElement(ListItem, {\n      movie: movie,\n      key: movie.id,\n      history: this.props.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Catalog;","map":{"version":3,"sources":["C:/Users/INTERN/Documents/Practice/eleksPractice/moviesapp/src/components/Catalog.js"],"names":["debounce","React","API","TextField","Select","MenuItem","ListItem","TRENDING","POPULAR","TOP","REQUEST_MAP","getTrending","getPopular","getTopRated","Catalog","Component","state","tempSearchQuery","settings","sorting","localStorage","getItem","page","searchQuery","data","changeData","results","setState","changeSettings","update","prevState","onChange","onChangeDebounced","onTextChange","e","target","value","fetchData","getMovieByQuery","then","requestFunc","onSelectChange","setItem","componentDidMount","componentDidUpdate","prevProps","render","map","movie","id","props","history"],"mappings":"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","sourcesContent":["import debounce from 'lodash/debounce'\r\nimport React from 'react';\r\nimport API from '../API'\r\nimport './styles/Catalog.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItem from './ListItem';\r\n\r\nconst TRENDING = 'trending';\r\nconst POPULAR = 'popular';\r\nconst TOP = 'top';\r\n\r\nconst REQUEST_MAP = {\r\n  [TRENDING]: API.getTrending,\r\n  [POPULAR]: API.getPopular,\r\n  [TOP]: API.getTopRated\r\n}\r\n\r\nclass Catalog extends React.Component {\r\n  state = {\r\n    tempSearchQuery: '',\r\n    settings: {\r\n      sorting: localStorage.getItem('sorting') || 'trending',\r\n      page: localStorage.getItem('page') || 1,\r\n      searchQuery: ''\r\n    },\r\n    data: []\r\n  };\r\n\r\n  componentDidMount () {\r\n    this.fetchData();\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState) {\r\n    if (this.state.settings !== prevState.settings) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  changeData = ({ results }) => {\r\n    this.setState({ data: results });\r\n  }\r\n\r\n  changeSettings = (update = {}) => {\r\n    this.setState(prevState => ({\r\n      settings: {\r\n        ...prevState.settings,\r\n        page: 1,\r\n        ...update\r\n      }\r\n    }))\r\n  }\r\n\r\n  onChange = searchQuery => {\r\n    this.changeSettings({ searchQuery });\r\n  };\r\n\r\n  onChangeDebounced = debounce(this.onChange, 3000);\r\n\r\n  onTextChange = e => {\r\n    this.setState({ tempSearchQuery: e.target.value });\r\n\r\n    this.onChangeDebounced(e.target.value);\r\n  }\r\n\r\n  fetchData = () => {\r\n    const { searchQuery, sorting, page } = this.state.settings;\r\n\r\n    if (searchQuery) {\r\n      API.getMovieByQuery(page, searchQuery).then(this.changeData);\r\n    } else {\r\n      const requestFunc = REQUEST_MAP[sorting];\r\n\r\n      if (requestFunc) {\r\n        requestFunc(page).then(this.changeData);\r\n      }\r\n    }\r\n  }\r\n\r\n  onSelectChange = e => {\r\n    localStorage.setItem('sorting', e.target.value);\r\n    this.changeSettings({ sorting: e.target.value })\r\n  }\r\n\r\n  render() {\r\n    const { tempSearchQuery, data, settings: { searchQuery, sorting } } = this.state;\r\n\r\n    return (\r\n      <div className=\"Catalog\">\r\n        <div className=\"filters\">\r\n          <TextField\r\n            label=\"Search\"\r\n            value={tempSearchQuery}\r\n            onChange={this.onTextChange}\r\n          />\r\n          <Select\r\n            disabled={!!searchQuery}\r\n            onChange={this.onSelectChange}\r\n            value={sorting}\r\n          >\r\n            <MenuItem value=\"trending\">\r\n              trending\r\n            </MenuItem>\r\n            <MenuItem value=\"popular\">\r\n              popular\r\n            </MenuItem>\r\n            <MenuItem value=\"top\">\r\n              top\r\n            </MenuItem>\r\n          </Select>\r\n        </div>\r\n        <div className=\"list\">\r\n          {\r\n            data.map(movie => (\r\n              <ListItem\r\n                movie={movie}\r\n                key={movie.id}\r\n                history={this.props.history}\r\n              />\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Catalog;\r\n"]},"metadata":{},"sourceType":"module"}