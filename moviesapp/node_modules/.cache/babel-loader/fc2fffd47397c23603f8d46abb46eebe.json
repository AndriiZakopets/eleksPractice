{"ast":null,"code":"import _objectSpread from \"C:\\\\prog\\\\eleksPractice\\\\moviesapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\prog\\\\eleksPractice\\\\moviesapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\prog\\\\eleksPractice\\\\moviesapp\\\\src\\\\components\\\\Catalog.js\";\nimport debounce from 'lodash/debounce';\nimport React, { useEffect, useState } from 'react';\nimport API from '../API';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItem from './ListItem';\nconst TRENDING = 'trending';\nconst POPULAR = 'popular';\nconst TOP = 'top';\nconst REQUEST_MAP = {\n  [TRENDING]: API.getTrending,\n  [POPULAR]: API.getPopular,\n  [TOP]: API.getTopRated\n};\n\nfunction Catalog(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        tempSearchQuery = _useState2[0],\n        setTempSearchQuery = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        data = _useState4[0],\n        setData = _useState4[1];\n\n  const _useState5 = useState({\n    sorting: localStorage.getItem('sorting') || 'trending',\n    page: localStorage.getItem('page') || 1,\n    searchQuery: ''\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        settings = _useState6[0],\n        setSettings = _useState6[1];\n\n  useEffect((prevProps, prevState) => {\n    console.log(prevProps);\n  });\n  useEffect((_prevProps, _prevState) => {\n    localStorage.setItem('page', settings.page);\n    fetchData();\n  }, [settings]);\n\n  const changeData = ({\n    results\n  }) => setData(results);\n\n  const fetchData = () => {\n    const searchQuery = settings.searchQuery,\n          sorting = settings.sorting,\n          page = settings.page;\n    console.log(page);\n\n    if (searchQuery) {\n      API.getMovieByQuery(page, searchQuery).then(changeData);\n    } else {\n      const requestFunc = REQUEST_MAP[sorting];\n\n      if (requestFunc) {\n        requestFunc(page).then(changeData);\n      }\n    }\n  };\n\n  const changeSettings = (update = {}) => {\n    setSettings(prevState => _objectSpread({}, prevState, {\n      page: 1\n    }, update));\n  };\n\n  const onChange = searchQuery => {\n    changeSettings({\n      searchQuery\n    });\n  };\n\n  const onChangeDebounced = debounce(onChange, 400);\n\n  const onTextChange = e => {\n    setTempSearchQuery(e.target.value);\n    onChangeDebounced(e.target.value);\n  };\n\n  const onSelectChange = e => {\n    localStorage.setItem('sorting', e.target.value);\n    changeSettings({\n      sorting: e.target.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Catalog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"filters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Search\",\n    value: tempSearchQuery,\n    onChange: onTextChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Select, {\n    disabled: !!settings.searchQuery,\n    onChange: onSelectChange,\n    value: settings.sorting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"trending\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"trending\"), React.createElement(MenuItem, {\n    value: \"popular\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"popular\"), React.createElement(MenuItem, {\n    value: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"top\"))), React.createElement(\"div\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, data.map(movie => React.createElement(ListItem, {\n    movie: movie,\n    key: movie.id,\n    history: props.history,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }))));\n}\n\nexport default Catalog;","map":{"version":3,"sources":["C:/prog/eleksPractice/moviesapp/src/components/Catalog.js"],"names":["debounce","React","useEffect","useState","API","TextField","Select","MenuItem","ListItem","TRENDING","POPULAR","TOP","REQUEST_MAP","getTrending","getPopular","getTopRated","Catalog","props","tempSearchQuery","setTempSearchQuery","data","setData","sorting","localStorage","getItem","page","searchQuery","settings","setSettings","prevProps","prevState","console","log","_prevProps","_prevState","setItem","fetchData","changeData","results","getMovieByQuery","then","requestFunc","changeSettings","update","onChange","onChangeDebounced","onTextChange","e","target","value","onSelectChange","map","movie","id","history"],"mappings":"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","sourcesContent":["import debounce from 'lodash/debounce'\r\nimport React, { useEffect, useState } from 'react';\r\nimport API from '../API'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItem from './ListItem';\r\n\r\nconst TRENDING = 'trending';\r\nconst POPULAR = 'popular';\r\nconst TOP = 'top';\r\n\r\nconst REQUEST_MAP = {\r\n  [TRENDING]: API.getTrending,\r\n  [POPULAR]: API.getPopular,\r\n  [TOP]: API.getTopRated\r\n}\r\n\r\nfunction Catalog(props) {\r\n  const [tempSearchQuery, setTempSearchQuery] = useState('');\r\n  const [data, setData] = useState([]);\r\n  const [settings, setSettings] = useState({\r\n    sorting: localStorage.getItem('sorting') || 'trending',\r\n    page: localStorage.getItem('page') || 1,\r\n    searchQuery: ''\r\n  });\r\n\r\n  useEffect((prevProps, prevState) => {\r\n    console.log(prevProps);\r\n  })\r\n\r\n  useEffect((_prevProps, _prevState) => {\r\n    localStorage.setItem('page', settings.page);\r\n    fetchData();\r\n  }, [settings]);\r\n\r\n  const changeData =  ({ results }) => setData(results);\r\n\r\n  const fetchData = () => {\r\n    const { searchQuery, sorting, page } = settings;\r\n    console.log(page);\r\n\r\n    if (searchQuery) {\r\n      API.getMovieByQuery(page, searchQuery).then(changeData);\r\n    } else {\r\n      const requestFunc = REQUEST_MAP[sorting];\r\n\r\n      if (requestFunc) {\r\n        requestFunc(page).then(changeData);\r\n      }\r\n    }\r\n  }\r\n\r\n  const changeSettings = (update = {}) => {\r\n    setSettings(prevState => ({\r\n      ...prevState,\r\n      page: 1,\r\n      ...update\r\n    }));\r\n  }\r\n\r\n  const onChange = searchQuery => {\r\n    changeSettings({ searchQuery });\r\n  };\r\n\r\n  const onChangeDebounced = debounce(onChange, 400);\r\n\r\n  const onTextChange = e => {\r\n    setTempSearchQuery(e.target.value);\r\n    onChangeDebounced(e.target.value);\r\n  }\r\n\r\n  const onSelectChange = e => {\r\n    localStorage.setItem('sorting', e.target.value);\r\n    changeSettings({ sorting: e.target.value })\r\n  }\r\n\r\n  return (\r\n    <div className=\"Catalog\">\r\n      <div className=\"filters\">\r\n        <TextField\r\n          label=\"Search\"\r\n          value={tempSearchQuery}\r\n          onChange={onTextChange}\r\n        />\r\n        <Select\r\n          disabled={!!settings.searchQuery}\r\n          onChange={onSelectChange}\r\n          value={settings.sorting}\r\n        >\r\n          <MenuItem value=\"trending\">\r\n            trending\r\n          </MenuItem>\r\n          <MenuItem value=\"popular\">\r\n            popular\r\n          </MenuItem>\r\n          <MenuItem value=\"top\">\r\n            top\r\n          </MenuItem>\r\n        </Select>\r\n      </div>\r\n      <div className=\"list\">\r\n        {\r\n          data.map(movie => (\r\n            <ListItem\r\n              movie={movie}\r\n              key={movie.id}\r\n              history={props.history}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Catalog;\r\n"]},"metadata":{},"sourceType":"module"}