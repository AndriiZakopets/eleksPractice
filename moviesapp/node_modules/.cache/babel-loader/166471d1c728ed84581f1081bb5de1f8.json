{"ast":null,"code":"import _objectSpread from \"C:\\\\prog\\\\eleksPractice\\\\moviesapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport API from '../API';\nimport appDataActions from '../actions/appDataActions';\nexport default {\n  getMovieById: id => async dispatch => {\n    dispatch(setFetching(true));\n\n    try {\n      const response = await API.getDetails(id);\n      dispatch(setData(response));\n      dispatch(setFetching(false));\n      dispatch(setFetched(true));\n    } catch (error) {\n      dispatch(setError(error));\n      dispatch(setFetching(false));\n      dispatch(setFetched(false));\n    }\n  },\n  getMovieByQuery: settings => async dispatch => {\n    dispatch(setFetching(true));\n\n    try {\n      const _ref = await API.getMovieByQuery(settings),\n            results = _ref.results,\n            total_pages = _ref.total_pages;\n\n      const additionalDataById = results.reduce((acc, curr) => {\n        res[curr.id] = curr;\n        return acc;\n      }, {});\n      dispatch(appDataActions.setDataById(_objectSpread({}, additionalDataById)));\n      dispatch(appDataActions.setData(results));\n      dispatch(appDataActions.setTotalPages(total_pages));\n      dispatch(appDataActions.setFetching({\n        isFetching: false,\n        isFetched: true\n      }));\n    } catch (error) {\n      dispatch(setError(error));\n      dispatch(setFetching(false));\n      dispatch(setFetched(false));\n    }\n  },\n  discoverMovies: settings => async dispatch => {\n    dispatch(setFetching(true));\n\n    try {\n      const response = await API.getMovieDiscover(settings);\n      dispatch(setData(response));\n      dispatch(setFetching(false));\n      dispatch(setFetched(true));\n    } catch (error) {\n      dispatch(setError(error));\n      dispatch(setFetching(false));\n      dispatch(setFetched(false));\n    }\n  }\n};","map":{"version":3,"sources":["C:/prog/eleksPractice/moviesapp/src/actions/asyncActions.js"],"names":["API","appDataActions","getMovieById","id","dispatch","setFetching","response","getDetails","setData","setFetched","error","setError","getMovieByQuery","settings","results","total_pages","additionalDataById","reduce","acc","curr","res","setDataById","setTotalPages","isFetching","isFetched","discoverMovies","getMovieDiscover"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,QAAhB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AAEA,eAAe;AACbC,EAAAA,YAAY,EAAEC,EAAE,IAAI,MAAMC,QAAN,IAAkB;AACpCA,IAAAA,QAAQ,CAAEC,WAAW,CAAC,IAAD,CAAb,CAAR;;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,UAAJ,CAAeJ,EAAf,CAAvB;AACAC,MAAAA,QAAQ,CAACI,OAAO,CAACF,QAAD,CAAR,CAAR;AACAF,MAAAA,QAAQ,CAACC,WAAW,CAAC,KAAD,CAAZ,CAAR;AACAD,MAAAA,QAAQ,CAACK,UAAU,CAAC,IAAD,CAAX,CAAR;AACD,KALD,CAMA,OAAOC,KAAP,EAAc;AACZN,MAAAA,QAAQ,CAACO,QAAQ,CAACD,KAAD,CAAT,CAAR;AACAN,MAAAA,QAAQ,CAACC,WAAW,CAAC,KAAD,CAAZ,CAAR;AACAD,MAAAA,QAAQ,CAACK,UAAU,CAAC,KAAD,CAAX,CAAR;AACD;AACF,GAfY;AAiBbG,EAAAA,eAAe,EAAEC,QAAQ,IAAI,MAAMT,QAAN,IAAkB;AAC7CA,IAAAA,QAAQ,CAAEC,WAAW,CAAC,IAAD,CAAb,CAAR;;AAEA,QAAI;AAAA,mBAC+B,MAAML,GAAG,CAACY,eAAJ,CAAoBC,QAApB,CADrC;AAAA,YACMC,OADN,QACMA,OADN;AAAA,YACeC,WADf,QACeA,WADf;;AAEF,YAAMC,kBAAkB,GAAGF,OAAO,CAACG,MAAR,CAAe,CAACC,GAAD,EAAMC,IAAN,KAAe;AACvDC,QAAAA,GAAG,CAACD,IAAI,CAAChB,EAAN,CAAH,GAAegB,IAAf;AACA,eAAOD,GAAP;AACD,OAH0B,EAGxB,EAHwB,CAA3B;AAIAd,MAAAA,QAAQ,CAACH,cAAc,CAACoB,WAAf,mBACJL,kBADI,EAAD,CAAR;AAGAZ,MAAAA,QAAQ,CAACH,cAAc,CAACO,OAAf,CAAuBM,OAAvB,CAAD,CAAR;AACAV,MAAAA,QAAQ,CAACH,cAAc,CAACqB,aAAf,CAA6BP,WAA7B,CAAD,CAAR;AACAX,MAAAA,QAAQ,CAACH,cAAc,CAACI,WAAf,CAA2B;AAAEkB,QAAAA,UAAU,EAAE,KAAd;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OAA3B,CAAD,CAAR;AACD,KAZD,CAaA,OAAOd,KAAP,EAAc;AACZN,MAAAA,QAAQ,CAACO,QAAQ,CAACD,KAAD,CAAT,CAAR;AACAN,MAAAA,QAAQ,CAACC,WAAW,CAAC,KAAD,CAAZ,CAAR;AACAD,MAAAA,QAAQ,CAACK,UAAU,CAAC,KAAD,CAAX,CAAR;AACD;AACF,GAtCY;AAwCbgB,EAAAA,cAAc,EAAEZ,QAAQ,IAAI,MAAMT,QAAN,IAAkB;AAC5CA,IAAAA,QAAQ,CAAEC,WAAW,CAAC,IAAD,CAAb,CAAR;;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMN,GAAG,CAAC0B,gBAAJ,CAAqBb,QAArB,CAAvB;AACAT,MAAAA,QAAQ,CAACI,OAAO,CAACF,QAAD,CAAR,CAAR;AACAF,MAAAA,QAAQ,CAACC,WAAW,CAAC,KAAD,CAAZ,CAAR;AACAD,MAAAA,QAAQ,CAACK,UAAU,CAAC,IAAD,CAAX,CAAR;AACD,KALD,CAMA,OAAOC,KAAP,EAAc;AACZN,MAAAA,QAAQ,CAACO,QAAQ,CAACD,KAAD,CAAT,CAAR;AACAN,MAAAA,QAAQ,CAACC,WAAW,CAAC,KAAD,CAAZ,CAAR;AACAD,MAAAA,QAAQ,CAACK,UAAU,CAAC,KAAD,CAAX,CAAR;AACD;AACF;AAtDY,CAAf","sourcesContent":["import API from '../API';\r\nimport appDataActions from '../actions/appDataActions';\r\n\r\nexport default {\r\n  getMovieById: id => async dispatch => {\r\n    dispatch( setFetching(true) );\r\n  \r\n    try {\r\n      const response = await API.getDetails(id);\r\n      dispatch(setData(response));\r\n      dispatch(setFetching(false));\r\n      dispatch(setFetched(true));\r\n    }\r\n    catch (error) {\r\n      dispatch(setError(error));\r\n      dispatch(setFetching(false));\r\n      dispatch(setFetched(false));\r\n    }\r\n  },\r\n\r\n  getMovieByQuery: settings => async dispatch => {\r\n    dispatch( setFetching(true) );\r\n  \r\n    try {\r\n      const { results, total_pages } = await API.getMovieByQuery(settings);\r\n      const additionalDataById = results.reduce((acc, curr) => {\r\n        res[curr.id] = curr;\r\n        return acc;\r\n      }, {});\r\n      dispatch(appDataActions.setDataById({\r\n        ...additionalDataById\r\n      }));\r\n      dispatch(appDataActions.setData(results));\r\n      dispatch(appDataActions.setTotalPages(total_pages));\r\n      dispatch(appDataActions.setFetching({ isFetching: false, isFetched: true }));\r\n    }\r\n    catch (error) {\r\n      dispatch(setError(error));\r\n      dispatch(setFetching(false));\r\n      dispatch(setFetched(false));\r\n    }\r\n  },\r\n  \r\n  discoverMovies: settings => async dispatch => {\r\n    dispatch( setFetching(true) );\r\n  \r\n    try {\r\n      const response = await API.getMovieDiscover(settings);\r\n      dispatch(setData(response));\r\n      dispatch(setFetching(false));\r\n      dispatch(setFetched(true));\r\n    }\r\n    catch (error) {\r\n      dispatch(setError(error));\r\n      dispatch(setFetching(false));\r\n      dispatch(setFetched(false));\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}