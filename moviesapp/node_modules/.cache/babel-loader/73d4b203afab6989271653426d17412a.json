{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\INTERN\\\\Documents\\\\Practice\\\\eleksPractice\\\\moviesapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { START_FETCHING, SUCCESS_ACTION, SET_ERROR } from '../constants';\nconst initialState = {\n  isFetching: false,\n  isFetched: false,\n  error: null,\n  data: [],\n  totalResults: 0,\n  dataById: {}\n};\nexport default ((state = initialState, action) => {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case START_FETCHING:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case SUCCESS_ACTION:\n      return _objectSpread({}, state, {}, payload, {\n        dataById: _objectSpread({}, state.dataById, {}, payload.dataById),\n        isFetching: false,\n        isFetched: true\n      });\n\n    case SET_ERROR:\n      return _objectSpread({}, state, {}, payload, {\n        isFetching: false,\n        isFetched: false\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/INTERN/Documents/Practice/eleksPractice/moviesapp/src/reducers/moviesReducer.js"],"names":["START_FETCHING","SUCCESS_ACTION","SET_ERROR","initialState","isFetching","isFetched","error","data","totalResults","dataById","state","action","type","payload"],"mappings":";AAAA,SACEA,cADF,EAEEC,cAFF,EAGEC,SAHF,QAIO,cAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,IAAI,EAAE,EAJa;AAKnBC,EAAAA,YAAY,EAAE,CALK;AAMnBC,EAAAA,QAAQ,EAAE;AANS,CAArB;AASA,gBAAe,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAAA,QACvCC,IADuC,GACrBD,MADqB,CACvCC,IADuC;AAAA,QACjCC,OADiC,GACrBF,MADqB,CACjCE,OADiC;;AAE/C,UAAQD,IAAR;AACE,SAAKZ,cAAL;AACE,+BACKU,KADL;AAEEN,QAAAA,UAAU,EAAE;AAFd;;AAIF,SAAKH,cAAL;AACE,+BACKS,KADL,MAEKG,OAFL;AAGEJ,QAAAA,QAAQ,oBACHC,KAAK,CAACD,QADH,MAEHI,OAAO,CAACJ,QAFL,CAHV;AAOEL,QAAAA,UAAU,EAAE,KAPd;AAQEC,QAAAA,SAAS,EAAE;AARb;;AAUF,SAAKH,SAAL;AACE,+BACKQ,KADL,MAEKG,OAFL;AAGET,QAAAA,UAAU,EAAE,KAHd;AAIEC,QAAAA,SAAS,EAAE;AAJb;;AAMF;AACE,aAAOK,KAAP;AAzBJ;AA2BD,CA7BD","sourcesContent":["import {\r\n  START_FETCHING,\r\n  SUCCESS_ACTION,\r\n  SET_ERROR\r\n} from '../constants';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  isFetched: false,\r\n  error: null,\r\n  data: [],\r\n  totalResults: 0,\r\n  dataById: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case START_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      };\r\n    case SUCCESS_ACTION:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        dataById: {\r\n          ...state.dataById,\r\n          ...payload.dataById\r\n        },\r\n        isFetching: false,\r\n        isFetched: true\r\n      };\r\n    case SET_ERROR: \r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isFetching: false,\r\n        isFetched: false\r\n      };\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}