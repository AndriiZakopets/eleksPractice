{"ast":null,"code":"import { store } from 'react-notifications-component';\nimport { ADD_MOVIE, CHANGE_ORDER, REMOVE_MOVIE } from '../constants';\n\nconst addNotification = (type, message) => {\n  store.addNotification({\n    title: type,\n    message,\n    type,\n    insert: \"top\",\n    container: \"bottom-right\",\n    animationIn: [\"animated\", \"fadeIn\"],\n    animationOut: [\"animated\", \"fadeOut\"],\n    dismiss: {\n      duration: 3000,\n      onScreen: true\n    }\n  });\n};\n\nexport const addMovie = movie => {\n  return {\n    type: ADD_MOVIE,\n    payload: movie\n  };\n};\nexport const changeOrder = (sourceI, destinationI, draggableId) => {\n  return {\n    type: CHANGE_ORDER,\n    payload: {\n      sourceI,\n      destinationI,\n      draggableId\n    }\n  };\n};\nexport const removeMovie = movieId => {\n  return {\n    type: REMOVE_MOVIE,\n    payload: {\n      movieId\n    }\n  };\n};\nexport const addWatchlistMovie = (movie = {}) => (dispatch, getState) => {\n  const state = getState().watchList;\n\n  if (!state.watchList.includes(movie.id)) {\n    addNotification('success', `the movie added successfully`);\n    dispatch(addMovie(movie));\n  } else {\n    addNotification('warning', `the movie already in your watchlist`);\n  }\n};","map":{"version":3,"sources":["C:/Users/INTERN/Documents/Practice/eleksPractice/moviesapp/src/actions/WatchListActions.js"],"names":["store","ADD_MOVIE","CHANGE_ORDER","REMOVE_MOVIE","addNotification","type","message","title","insert","container","animationIn","animationOut","dismiss","duration","onScreen","addMovie","movie","payload","changeOrder","sourceI","destinationI","draggableId","removeMovie","movieId","addWatchlistMovie","dispatch","getState","state","watchList","includes","id"],"mappings":"AAAA,SAASA,KAAT,QAAsB,+BAAtB;AACA,SACEC,SADF,EAEEC,YAFF,EAGEC,YAHF,QAIO,cAJP;;AAMA,MAAMC,eAAe,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACzCN,EAAAA,KAAK,CAACI,eAAN,CAAsB;AACpBG,IAAAA,KAAK,EAAEF,IADa;AAEpBC,IAAAA,OAFoB;AAGpBD,IAAAA,IAHoB;AAIpBG,IAAAA,MAAM,EAAE,KAJY;AAKpBC,IAAAA,SAAS,EAAE,cALS;AAMpBC,IAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,QAAb,CANO;AAOpBC,IAAAA,YAAY,EAAE,CAAC,UAAD,EAAa,SAAb,CAPM;AAQpBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE,IADH;AAEPC,MAAAA,QAAQ,EAAE;AAFH;AARW,GAAtB;AAaD,CAdD;;AAgBA,OAAO,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLX,IAAAA,IAAI,EAAEJ,SADD;AAELgB,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,WAAW,GAAG,CAACC,OAAD,EAAUC,YAAV,EAAwBC,WAAxB,KAAwC;AACjE,SAAO;AACLhB,IAAAA,IAAI,EAAEH,YADD;AAELe,IAAAA,OAAO,EAAE;AACPE,MAAAA,OADO;AAEPC,MAAAA,YAFO;AAGPC,MAAAA;AAHO;AAFJ,GAAP;AAQD,CATM;AAWP,OAAO,MAAMC,WAAW,GAAGC,OAAO,IAAI;AACpC,SAAO;AACLlB,IAAAA,IAAI,EAAEF,YADD;AAELc,IAAAA,OAAO,EAAE;AACPM,MAAAA;AADO;AAFJ,GAAP;AAMD,CAPM;AASP,OAAO,MAAMC,iBAAiB,GAAG,CAACR,KAAK,GAAG,EAAT,KAC/B,CAACS,QAAD,EAAWC,QAAX,KAAwB;AACtB,QAAMC,KAAK,GAAGD,QAAQ,GAAGE,SAAzB;;AACA,MAAI,CAACD,KAAK,CAACC,SAAN,CAAgBC,QAAhB,CAAyBb,KAAK,CAACc,EAA/B,CAAL,EAAyC;AACvC1B,IAAAA,eAAe,CAAC,SAAD,EAAa,8BAAb,CAAf;AACAqB,IAAAA,QAAQ,CAACV,QAAQ,CAACC,KAAD,CAAT,CAAR;AACD,GAHD,MAGO;AACLZ,IAAAA,eAAe,CAAC,SAAD,EAAa,qCAAb,CAAf;AACD;AACF,CATI","sourcesContent":["import { store } from 'react-notifications-component';\r\nimport {\r\n  ADD_MOVIE,\r\n  CHANGE_ORDER,\r\n  REMOVE_MOVIE\r\n} from '../constants';\r\n\r\nconst addNotification = (type, message) => {\r\n  store.addNotification({\r\n    title: type,\r\n    message,\r\n    type,\r\n    insert: \"top\",\r\n    container: \"bottom-right\",\r\n    animationIn: [\"animated\", \"fadeIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    dismiss: {\r\n      duration: 3000,\r\n      onScreen: true\r\n    }\r\n  });\r\n}\r\n\r\nexport const addMovie = movie => {\r\n  return {\r\n    type: ADD_MOVIE,\r\n    payload: movie\r\n  };\r\n}\r\n\r\nexport const changeOrder = (sourceI, destinationI, draggableId) => {\r\n  return {\r\n    type: CHANGE_ORDER,\r\n    payload: {\r\n      sourceI,\r\n      destinationI,\r\n      draggableId\r\n    }\r\n  };\r\n}\r\n\r\nexport const removeMovie = movieId => {\r\n  return {\r\n    type: REMOVE_MOVIE,\r\n    payload: {\r\n      movieId\r\n    }\r\n  };\r\n}\r\n\r\nexport const addWatchlistMovie = (movie = {}) => \r\n  (dispatch, getState) => {\r\n    const state = getState().watchList;\r\n    if (!state.watchList.includes(movie.id)) {\r\n      addNotification('success', `the movie added successfully`);\r\n      dispatch(addMovie(movie));\r\n    } else {\r\n      addNotification('warning', `the movie already in your watchlist`);\r\n    }\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}