{"ast":null,"code":"import _objectSpread from \"C:\\\\prog\\\\eleksPractice\\\\moviesapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nconst initialState = {\n  isFetching: true,\n  isFetched: false,\n  error: null,\n  data: [],\n  dataById: {},\n  totalPages: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_FETCHING':\n      return _objectSpread({}, state, {\n        isFetching: action.payload.isFetching,\n        isFetched: action.payload.isFetched\n      });\n\n    case 'SET_ERROR':\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    case 'SET_DATA':\n      return _objectSpread({}, state, {\n        data: action.data,\n        totalPages: action.payload\n      });\n\n    case 'SET_DATA_BY_ID':\n      return _objectSpread({}, state, {\n        dataById: state.dataById,\n        dataById: action.payload\n      });\n\n    case 'SET_TOTAL_PAGES':\n      return _objectSpread({}, state, {\n        totalPages: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/prog/eleksPractice/moviesapp/src/reducers/appDataReducer.js"],"names":["initialState","isFetching","isFetched","error","data","dataById","totalPages","reducer","state","action","type","payload"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,IADO;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,IAAI,EAAE,EAJa;AAKnBC,EAAAA,QAAQ,EAAE,EALS;AAMnBC,EAAAA,UAAU,EAAE;AANO,CAArB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,+BACKF,KADL;AAEEP,QAAAA,UAAU,EAAEQ,MAAM,CAACE,OAAP,CAAeV,UAF7B;AAGEC,QAAAA,SAAS,EAAEO,MAAM,CAACE,OAAP,CAAeT;AAH5B;;AAKF,SAAK,WAAL;AACE,+BACKM,KADL;AAEEL,QAAAA,KAAK,EAAEM,MAAM,CAACE;AAFhB;;AAIF,SAAK,UAAL;AACE,+BACKH,KADL;AAEEJ,QAAAA,IAAI,EAAEK,MAAM,CAACL,IAFf;AAGEE,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAHrB;;AAKF,SAAK,gBAAL;AACE,+BACKH,KADL;AAEEH,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAFlB;AAGEA,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAHnB;;AAKF,SAAK,iBAAL;AACE,+BACKH,KADL;AAEEF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAFrB;;AAIF;AACE,aAAOH,KAAP;AA9BJ;AAgCD,CAjCD;;AAmCA,eAAeD,OAAf","sourcesContent":["const initialState = {\r\n  isFetching: true,\r\n  isFetched: false,\r\n  error: null,\r\n  data: [],\r\n  dataById: {},\r\n  totalPages: 0\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_FETCHING':\r\n      return {\r\n        ...state,\r\n        isFetching: action.payload.isFetching,\r\n        isFetched: action.payload.isFetched\r\n      };\r\n    case 'SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    case 'SET_DATA': \r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        totalPages: action.payload\r\n      };\r\n    case 'SET_DATA_BY_ID': \r\n      return {\r\n        ...state,\r\n        dataById: state.dataById,\r\n        dataById: action.payload\r\n      };\r\n    case 'SET_TOTAL_PAGES':\r\n      return {\r\n        ...state,\r\n        totalPages: action.payload\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}