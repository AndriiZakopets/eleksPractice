{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport ThunkMiddleware from 'redux-thunk';\nimport moviesReducer from './reducers/moviesReducer';\nimport settingsReducer from './reducers/settingsReducer';\nimport watchListReducer from './reducers/watchListReducer';\nimport { ADD_MOVIE, CHANGE_ORDER } from './constants';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst reducer = combineReducers({\n  settings: settingsReducer,\n  movies: moviesReducer,\n  watchList: watchListReducer\n});\n\nconst addWatchListToLocalStorage = store => next => action => {\n  next(action);\n\n  if (action.type === ADD_MOVIE || action.type === CHANGE_ORDER) {\n    localStorage.setItem('watch-list', JSON.stringify(store.getState().watchList));\n  }\n};\n\nconst middlewareArr = [ThunkMiddleware, addWatchListToLocalStorage];\nexport default createStore(reducer, composeEnhancers(applyMiddleware(...middlewareArr)));","map":{"version":3,"sources":["C:/prog/eleksPractice/moviesapp/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","ThunkMiddleware","moviesReducer","settingsReducer","watchListReducer","ADD_MOVIE","CHANGE_ORDER","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducer","settings","movies","watchList","addWatchListToLocalStorage","store","next","action","type","localStorage","setItem","JSON","stringify","getState","middlewareArr"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,SACIC,SADJ,EAEIC,YAFJ,QAGO,aAHP;AAKA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CT,OAAxE;AACA,MAAMU,OAAO,GAAGZ,eAAe,CAAC;AAC5Ba,EAAAA,QAAQ,EAAER,eADkB;AAE5BS,EAAAA,MAAM,EAAEV,aAFoB;AAG5BW,EAAAA,SAAS,EAAET;AAHiB,CAAD,CAA/B;;AAMA,MAAMU,0BAA0B,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;AAChED,EAAAA,IAAI,CAACC,MAAD,CAAJ;;AACA,MAAIA,MAAM,CAACC,IAAP,KAAgBb,SAAhB,IAA6BY,MAAM,CAACC,IAAP,KAAgBZ,YAAjD,EAA+D;AAC3Da,IAAAA,YAAY,CAACC,OAAb,CACI,YADJ,EAEIC,IAAI,CAACC,SAAL,CAAeP,KAAK,CAACQ,QAAN,GAAiBV,SAAhC,CAFJ;AAIH;AACJ,CARD;;AAUA,MAAMW,aAAa,GAAG,CAACvB,eAAD,EAAkBa,0BAAlB,CAAtB;AAEA,eAAejB,WAAW,CACtBa,OADsB,EAEtBH,gBAAgB,CACZR,eAAe,CAAC,GAAGyB,aAAJ,CADH,CAFM,CAA1B","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport ThunkMiddleware from 'redux-thunk';\r\nimport moviesReducer from './reducers/moviesReducer';\r\nimport settingsReducer from './reducers/settingsReducer';\r\nimport watchListReducer from './reducers/watchListReducer';\r\nimport {\r\n    ADD_MOVIE,\r\n    CHANGE_ORDER\r\n} from './constants';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst reducer = combineReducers({\r\n    settings: settingsReducer,\r\n    movies: moviesReducer,\r\n    watchList: watchListReducer\r\n});\r\n\r\nconst addWatchListToLocalStorage = (store) => (next) => (action) => {\r\n    next(action)\r\n    if (action.type === ADD_MOVIE || action.type === CHANGE_ORDER) {\r\n        localStorage.setItem(\r\n            'watch-list',\r\n            JSON.stringify(store.getState().watchList)\r\n        )\r\n    }\r\n}\r\n\r\nconst middlewareArr = [ThunkMiddleware, addWatchListToLocalStorage]\r\n\r\nexport default createStore(\r\n    reducer, \r\n    composeEnhancers(\r\n        applyMiddleware(...middlewareArr)\r\n    ),\r\n);"]},"metadata":{},"sourceType":"module"}