{"ast":null,"code":"var _jsxFileName = \"C:\\\\prog\\\\eleksPractice\\\\moviesapp\\\\src\\\\containers\\\\CatalogContainer.js\";\nimport Catalog from '../components/Catalog';\nimport API from '../API';\nimport React, { useEffect } from 'react';\nimport appDataActions from '../actions/appDataActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMovieByQuery, discoverMovies } from '../actions/asyncActions';\nimport { SORTINGS } from '../constants';\nexport default function CatalogContainer({\n  history\n}) {\n  const isFetching = useSelector(state => state.isFetching);\n  const data = useSelector(state => state.appData.data);\n  const settings = useSelector(state => state.settings);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const searchQuery = settings.searchQuery,\n          sorting = settings.sorting,\n          page = settings.page;\n    const requestAction = searchQuery.trim() ? discoverMovies : getMovieByQuery;\n    localStorage.setItem('page', page);\n    localStorage.setItem('sorting', sorting);\n    dispatch(requestAction(settings));\n  }, [settings]);\n\n  const redirect = id => {\n    history.push(`catalog/${id}`);\n  };\n\n  return React.createElement(Catalog, {\n    data: data,\n    redirect: redirect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["C:/prog/eleksPractice/moviesapp/src/containers/CatalogContainer.js"],"names":["Catalog","API","React","useEffect","appDataActions","useDispatch","useSelector","getMovieByQuery","discoverMovies","SORTINGS","CatalogContainer","history","isFetching","state","data","appData","settings","dispatch","searchQuery","sorting","page","requestAction","trim","localStorage","setItem","redirect","id","push"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,yBAAhD;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,eAAe,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAuC;AACpD,QAAMC,UAAU,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACA,QAAME,IAAI,GAAGR,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACE,OAAN,CAAcD,IAAxB,CAAxB;AACA,QAAME,QAAQ,GAAGV,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACG,QAAhB,CAA5B;AAEA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AAAA,UACNe,WADM,GACyBF,QADzB,CACNE,WADM;AAAA,UACOC,OADP,GACyBH,QADzB,CACOG,OADP;AAAA,UACgBC,IADhB,GACyBJ,QADzB,CACgBI,IADhB;AAEd,UAAMC,aAAa,GAAGH,WAAW,CAACI,IAAZ,KAAqBd,cAArB,GAAsCD,eAA5D;AAEAgB,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BJ,IAA7B;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCL,OAAhC;AAEAF,IAAAA,QAAQ,CAACI,aAAa,CAACL,QAAD,CAAd,CAAR;AACD,GARQ,EAQN,CAACA,QAAD,CARM,CAAT;;AAWA,QAAMS,QAAQ,GAAGC,EAAE,IAAI;AACrBf,IAAAA,OAAO,CAACgB,IAAR,CAAc,WAAUD,EAAG,EAA3B;AACD,GAFD;;AAIA,SACE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAEZ,IADR;AAEE,IAAA,QAAQ,EAAEW,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD","sourcesContent":["import Catalog from '../components/Catalog';\r\nimport API from '../API';\r\nimport React, { useEffect } from 'react';\r\nimport appDataActions from '../actions/appDataActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMovieByQuery, discoverMovies } from '../actions/asyncActions';\r\nimport { SORTINGS } from '../constants'\r\n\r\nexport default function CatalogContainer({ history }) {\r\n  const isFetching = useSelector(state => state.isFetching);\r\n  const data = useSelector(state => state.appData.data);\r\n  const settings = useSelector(state => state.settings);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const { searchQuery, sorting, page } = settings;\r\n    const requestAction = searchQuery.trim() ? discoverMovies : getMovieByQuery;\r\n\r\n    localStorage.setItem('page', page);\r\n    localStorage.setItem('sorting', sorting);\r\n\r\n    dispatch(requestAction(settings));\r\n  }, [settings]);\r\n\r\n\r\n  const redirect = id => {\r\n    history.push(`catalog/${id}`);\r\n  }\r\n\r\n  return (\r\n    <Catalog\r\n      data={data}\r\n      redirect={redirect}\r\n    />\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}