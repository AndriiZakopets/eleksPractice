{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\INTERN\\\\Documents\\\\Practice\\\\eleksPractice\\\\moviesapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { ADD_MOVIE, CHANGE_ORDER, REMOVE_MOVIE } from '../constants';\nlet initialState;\nconst storageWatchList = localStorage.getItem('watch-list');\n\nif (storageWatchList) {\n  initialState = JSON.parse(storageWatchList);\n} else {\n  initialState = {\n    watchIds: {},\n    watchList: []\n  };\n}\n\nconst reducer = (state = initialState, action) => {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case ADD_MOVIE:\n      return _objectSpread({}, state, {\n        watchIds: _objectSpread({}, state.watchIds, {\n          [payload.id]: payload\n        }),\n        watchList: [...state.watchList, payload.id]\n      });\n\n    case CHANGE_ORDER:\n      {\n        const newWatchList = [...state.watchList];\n        newWatchList.splice(payload.sourceI, 1);\n        newWatchList.splice(payload.destinationI, 0, payload.draggableId);\n        return _objectSpread({}, state, {\n          watchList: newWatchList\n        });\n      }\n\n    case REMOVE_MOVIE:\n      {\n        const newWatchList = [...state.watchList];\n        newWatchList.splice(payload.movieId, 1);\n        return _objectSpread({}, state, {\n          watchList: newWatchList\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/INTERN/Documents/Practice/eleksPractice/moviesapp/src/reducers/watchListReducer.js"],"names":["ADD_MOVIE","CHANGE_ORDER","REMOVE_MOVIE","initialState","storageWatchList","localStorage","getItem","JSON","parse","watchIds","watchList","reducer","state","action","type","payload","id","newWatchList","splice","sourceI","destinationI","draggableId","movieId"],"mappings":";AAAA,SACEA,SADF,EAEEC,YAFF,EAGEC,YAHF,QAIO,cAJP;AAMA,IAAIC,YAAJ;AACA,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAzB;;AAEA,IAAIF,gBAAJ,EAAsB;AACpBD,EAAAA,YAAY,GAAGI,IAAI,CAACC,KAAL,CAAWJ,gBAAX,CAAf;AACD,CAFD,MAEO;AACLD,EAAAA,YAAY,GAAG;AACbM,IAAAA,QAAQ,EAAE,EADG;AAEbC,IAAAA,SAAS,EAAE;AAFE,GAAf;AAID;;AAED,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAAA,QACxCC,IADwC,GACtBD,MADsB,CACxCC,IADwC;AAAA,QAClCC,OADkC,GACtBF,MADsB,CAClCE,OADkC;;AAEhD,UAAQD,IAAR;AACE,SAAKd,SAAL;AACE,+BACKY,KADL;AAEEH,QAAAA,QAAQ,oBACHG,KAAK,CAACH,QADH;AAEN,WAACM,OAAO,CAACC,EAAT,GAAcD;AAFR,UAFV;AAMEL,QAAAA,SAAS,EAAE,CACT,GAAGE,KAAK,CAACF,SADA,EAETK,OAAO,CAACC,EAFC;AANb;;AAWF,SAAKf,YAAL;AAAmB;AACjB,cAAMgB,YAAY,GAAG,CAAC,GAAGL,KAAK,CAACF,SAAV,CAArB;AACAO,QAAAA,YAAY,CAACC,MAAb,CAAoBH,OAAO,CAACI,OAA5B,EAAqC,CAArC;AACAF,QAAAA,YAAY,CAACC,MAAb,CAAoBH,OAAO,CAACK,YAA5B,EAA0C,CAA1C,EAA6CL,OAAO,CAACM,WAArD;AACA,iCACKT,KADL;AAEEF,UAAAA,SAAS,EAAEO;AAFb;AAID;;AACD,SAAKf,YAAL;AAAmB;AACjB,cAAMe,YAAY,GAAG,CAAC,GAAGL,KAAK,CAACF,SAAV,CAArB;AACAO,QAAAA,YAAY,CAACC,MAAb,CAAoBH,OAAO,CAACO,OAA5B,EAAqC,CAArC;AACA,iCACKV,KADL;AAEEF,UAAAA,SAAS,EAAEO;AAFb;AAID;;AACD;AACE,aAAOL,KAAP;AA/BJ;AAiCD,CAnCD;;AAqCA,eAAeD,OAAf","sourcesContent":["import {\r\n  ADD_MOVIE,\r\n  CHANGE_ORDER,\r\n  REMOVE_MOVIE\r\n} from '../constants';\r\n\r\nlet initialState;\r\nconst storageWatchList = localStorage.getItem('watch-list');\r\n\r\nif (storageWatchList) {\r\n  initialState = JSON.parse(storageWatchList);\r\n} else {\r\n  initialState = {\r\n    watchIds: {},\r\n    watchList: []\r\n  };\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ADD_MOVIE: \r\n      return {\r\n        ...state,\r\n        watchIds: {\r\n          ...state.watchIds,\r\n          [payload.id]: payload\r\n        },\r\n        watchList: [\r\n          ...state.watchList,\r\n          payload.id\r\n        ]\r\n      };\r\n    case CHANGE_ORDER: {\r\n      const newWatchList = [...state.watchList];\r\n      newWatchList.splice(payload.sourceI, 1);\r\n      newWatchList.splice(payload.destinationI, 0, payload.draggableId);\r\n      return {\r\n        ...state,\r\n        watchList: newWatchList\r\n      };\r\n    }\r\n    case REMOVE_MOVIE: {\r\n      const newWatchList = [...state.watchList];\r\n      newWatchList.splice(payload.movieId, 1);\r\n      return {\r\n        ...state,\r\n        watchList: newWatchList\r\n      }\r\n    }\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}