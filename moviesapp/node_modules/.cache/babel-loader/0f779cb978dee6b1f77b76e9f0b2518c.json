{"ast":null,"code":"import API from '../API';\nimport { startFetching, getMoviesSuccess, getDetailsSuccess, rejectAction } from '../actions/moviesActions';\nexport const asyncActionFactory = (apiFunc, fetchingAction, fulfillledAction, rejectedAction, section) => (...args) => async dispatch => {\n  dispatch(fetchingAction(section, ...args));\n\n  try {\n    const response = await apiFunc(...args);\n    dispatch(fulfillledAction(response, section, ...args));\n  } catch (error) {\n    dispatch(rejectedAction(error, section, ...args));\n  }\n};\nexport const getMovieById = asyncActionFactory(API.getDetails, startFetching, getDetailsSuccess, rejectAction);\nexport const getMovieByQuery = asyncActionFactory(API.getMovieByQuery, startFetching, getMoviesSuccess, rejectAction);\nexport const discoverMovies = asyncActionFactory(API.getMovieDiscover, startFetching, getMoviesSuccess, rejectAction);","map":{"version":3,"sources":["C:/Users/INTERN/Documents/Practice/eleksPractice/moviesapp/src/actions/asyncActions.js"],"names":["API","startFetching","getMoviesSuccess","getDetailsSuccess","rejectAction","asyncActionFactory","apiFunc","fetchingAction","fulfillledAction","rejectedAction","section","args","dispatch","response","error","getMovieById","getDetails","getMovieByQuery","discoverMovies","getMovieDiscover"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,iBAHF,EAIEC,YAJF,QAKO,0BALP;AAOA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,OAAD,EAAUC,cAAV,EAA0BC,gBAA1B,EAA4CC,cAA5C,EAA4DC,OAA5D,KAChC,CAAC,GAAGC,IAAJ,KAAa,MAAMC,QAAN,IAAkB;AAC7BA,EAAAA,QAAQ,CAACL,cAAc,CAACG,OAAD,EAAU,GAAGC,IAAb,CAAf,CAAR;;AAEA,MAAI;AACF,UAAME,QAAQ,GAAG,MAAMP,OAAO,CAAC,GAAGK,IAAJ,CAA9B;AAEAC,IAAAA,QAAQ,CAACJ,gBAAgB,CAACK,QAAD,EAAWH,OAAX,EAAoB,GAAGC,IAAvB,CAAjB,CAAR;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc;AACdF,IAAAA,QAAQ,CAACH,cAAc,CAACK,KAAD,EAAQJ,OAAR,EAAiB,GAAGC,IAApB,CAAf,CAAR;AACD;AACF,CAXI;AAaP,OAAO,MAAMI,YAAY,GAAGV,kBAAkB,CAACL,GAAG,CAACgB,UAAL,EAAiBf,aAAjB,EAAgCE,iBAAhC,EAAmDC,YAAnD,CAAvC;AACP,OAAO,MAAMa,eAAe,GAAGZ,kBAAkB,CAACL,GAAG,CAACiB,eAAL,EAAsBhB,aAAtB,EAAqCC,gBAArC,EAAuDE,YAAvD,CAA1C;AACP,OAAO,MAAMc,cAAc,GAAGb,kBAAkB,CAACL,GAAG,CAACmB,gBAAL,EAAuBlB,aAAvB,EAAsCC,gBAAtC,EAAwDE,YAAxD,CAAzC","sourcesContent":["import API from '../API';\r\nimport {\r\n  startFetching,\r\n  getMoviesSuccess,\r\n  getDetailsSuccess,\r\n  rejectAction\r\n} from '../actions/moviesActions';\r\n\r\nexport const asyncActionFactory = (apiFunc, fetchingAction, fulfillledAction, rejectedAction, section) =>\r\n  (...args) => async dispatch => {\r\n    dispatch(fetchingAction(section, ...args));\r\n\r\n    try {\r\n      const response = await apiFunc(...args);\r\n\r\n      dispatch(fulfillledAction(response, section, ...args));\r\n    } catch (error) {\r\n      dispatch(rejectedAction(error, section, ...args));\r\n    }\r\n  }\r\n\r\nexport const getMovieById = asyncActionFactory(API.getDetails, startFetching, getDetailsSuccess, rejectAction);\r\nexport const getMovieByQuery = asyncActionFactory(API.getMovieByQuery, startFetching, getMoviesSuccess, rejectAction);\r\nexport const discoverMovies = asyncActionFactory(API.getMovieDiscover, startFetching, getMoviesSuccess, rejectAction);\r\n"]},"metadata":{},"sourceType":"module"}