{"ast":null,"code":"import { createStore, combineReducers } from 'redux';\nimport appDataReducer from './reducers/appDataReducer';\nimport settingsReducer from './reducers/settingsReducer';\nexport default createStore(combineReducers({\n  settings: settingsReducer,\n  appData: appDataReducer\n})); // dispatch(getFilm(id));\n// export const getFilm = (id) =>\n//     dispatch => {\n//         dispatch(setFetching({ isFetching: true }));\n//         return api.getFilm(id)\n//             .then(response => {\n//                 dispatch(setData(response))\n//                 dispatch(setFetching({ isFetching: false }));\n//                 dispatch(setFetched({ isFetched: true }));\n//             })\n//             .catch(error => {\n//                 dispatch(setError(error));\n//                 dispatch(setFetching({ isFetching: false }));\n//                 dispatch(setFetched({ isFetched: false }));\n//             })\n//     }","map":{"version":3,"sources":["C:/Users/INTERN/Documents/Practice/eleksPractice/moviesapp/src/store.js"],"names":["createStore","combineReducers","appDataReducer","settingsReducer","settings","appData"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AAEA,eAAeH,WAAW,CAACC,eAAe,CAAC;AACvCG,EAAAA,QAAQ,EAAED,eAD6B;AAEvCE,EAAAA,OAAO,EAAEH;AAF8B,CAAD,CAAhB,CAA1B,C,CAKA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createStore, combineReducers } from 'redux';\r\nimport appDataReducer from './reducers/appDataReducer';\r\nimport settingsReducer from './reducers/settingsReducer';\r\n\r\nexport default createStore(combineReducers({\r\n    settings: settingsReducer,\r\n    appData: appDataReducer\r\n}));\r\n\r\n// dispatch(getFilm(id));\r\n\r\n// export const getFilm = (id) =>\r\n//     dispatch => {\r\n//         dispatch(setFetching({ isFetching: true }));\r\n\r\n//         return api.getFilm(id)\r\n//             .then(response => {\r\n//                 dispatch(setData(response))\r\n//                 dispatch(setFetching({ isFetching: false }));\r\n//                 dispatch(setFetched({ isFetched: true }));\r\n//             })\r\n//             .catch(error => {\r\n//                 dispatch(setError(error));\r\n//                 dispatch(setFetching({ isFetching: false }));\r\n//                 dispatch(setFetched({ isFetched: false }));\r\n//             })\r\n//     }\r\n\r\n"]},"metadata":{},"sourceType":"module"}