{"ast":null,"code":"import _objectSpread from \"C:\\\\prog\\\\eleksPractice\\\\moviesapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\prog\\\\eleksPractice\\\\moviesapp\\\\src\\\\containers\\\\CatalogContainer.js\";\nimport Catalog from '../components/Catalog';\nimport API from '../API';\nimport actions from '../actions/reducerActions';\nimport { useDispatch, useSelector } from 'react-redux';\nconst TRENDING = 'trending';\nconst POPULAR = 'popular';\nconst TOP = 'top';\nconst SEARCH = 'search';\nconst REQUEST_MAP = {\n  [TRENDING]: API.getTrending,\n  [POPULAR]: API.getPopular,\n  [TOP]: API.getTopRated,\n  [SEARCH]: API.getMovieByQuery\n};\nexport default function CatalogContainer({\n  history\n}) {\n  const data = useSelector(state => state.data);\n  const settings = useSelector(state => state.settings);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const searchQuery = settings.searchQuery,\n          sorting = settings.sorting,\n          page = settings.page;\n    const requstFuncKey = searchQuery.trim() ? SEARCH : sorting;\n    const requestFunc = REQUEST_MAP[requstFuncKey];\n    localStorage.setItem('page', page);\n    localStorage.setItem('sorting', sorting);\n    requestFunc(settings).then(({\n      total_pages,\n      results\n    }) => {\n      dispatch(actions.setData(results));\n      dispatch(actions.setTotalPages(total_pages));\n      const additionalDataById = results.reduce((res, curr) => {\n        res[curr.id] = curr;\n        return res;\n      }, {});\n      dispatch(actions.setDataById(_objectSpread({}, dataById, {}, additionalDataById)));\n    });\n  }, [settings]);\n\n  const redirect = id => {\n    history.push(`catalog/${id}`);\n  };\n\n  return React.createElement(Catalog, {\n    data: data,\n    redirect: redirect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  });\n} // const mapStateToProps = (state, ownProps) => {\n//   return {\n//     data: state.appData.data,\n//     dataById: state.appData.dataById,\n//     totalPages: state.appData.totalPages\n//   }\n// }\n// const mapDispatchToProps = (dispatch, ownProps) => {\n//   return {\n//     setData(data) {\n//       dispatch(appDataActions.setData(data))\n//     },\n//     setDataById(data) {\n//       dispatch(appDataActions.setDataById(data))\n//     },\n//     setTotalPages(data) {\n//       dispatch(appDataActions.setTotalPages(data))\n//     },\n//     redirect(id) {\n//       ownProps.history.push(`catalog/${id}`);\n//     }\n//   }\n// }","map":{"version":3,"sources":["C:/prog/eleksPractice/moviesapp/src/containers/CatalogContainer.js"],"names":["Catalog","API","actions","useDispatch","useSelector","TRENDING","POPULAR","TOP","SEARCH","REQUEST_MAP","getTrending","getPopular","getTopRated","getMovieByQuery","CatalogContainer","history","data","state","settings","dispatch","useEffect","searchQuery","sorting","page","requstFuncKey","trim","requestFunc","localStorage","setItem","then","total_pages","results","setData","setTotalPages","additionalDataById","reduce","res","curr","id","setDataById","dataById","redirect","push"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,GAAG,GAAG,KAAZ;AACA,MAAMC,MAAM,GAAG,QAAf;AAEA,MAAMC,WAAW,GAAG;AAClB,GAACJ,QAAD,GAAYJ,GAAG,CAACS,WADE;AAElB,GAACJ,OAAD,GAAWL,GAAG,CAACU,UAFG;AAGlB,GAACJ,GAAD,GAAON,GAAG,CAACW,WAHO;AAIlB,GAACJ,MAAD,GAAUP,GAAG,CAACY;AAJI,CAApB;AAOA,eAAe,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAuC;AACpD,QAAMC,IAAI,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAME,QAAQ,GAAGd,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA5B;AAEA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AAEAiB,EAAAA,SAAS,CAAC,MAAM;AAAA,UACNC,WADM,GACyBH,QADzB,CACNG,WADM;AAAA,UACOC,OADP,GACyBJ,QADzB,CACOI,OADP;AAAA,UACgBC,IADhB,GACyBL,QADzB,CACgBK,IADhB;AAEd,UAAMC,aAAa,GAAGH,WAAW,CAACI,IAAZ,KAAqBjB,MAArB,GAA8Bc,OAApD;AACA,UAAMI,WAAW,GAAGjB,WAAW,CAACe,aAAD,CAA/B;AAEAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BL,IAA7B;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCN,OAAhC;AAEAI,IAAAA,WAAW,CAACR,QAAD,CAAX,CACCW,IADD,CACM,CAAC;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,KAAD,KAA4B;AAChCZ,MAAAA,QAAQ,CAACjB,OAAO,CAAC8B,OAAR,CAAgBD,OAAhB,CAAD,CAAR;AACAZ,MAAAA,QAAQ,CAACjB,OAAO,CAAC+B,aAAR,CAAsBH,WAAtB,CAAD,CAAR;AAEA,YAAMI,kBAAkB,GAAGH,OAAO,CAACI,MAAR,CAAe,CAACC,GAAD,EAAMC,IAAN,KAAe;AACvDD,QAAAA,GAAG,CAACC,IAAI,CAACC,EAAN,CAAH,GAAeD,IAAf;AACA,eAAOD,GAAP;AACD,OAH0B,EAGxB,EAHwB,CAA3B;AAKAjB,MAAAA,QAAQ,CAACjB,OAAO,CAACqC,WAAR,mBACJC,QADI,MAEJN,kBAFI,EAAD,CAAR;AAID,KAdD;AAeD,GAvBQ,EAuBN,CAAChB,QAAD,CAvBM,CAAT;;AA0BA,QAAMuB,QAAQ,GAAGH,EAAE,IAAI;AACrBvB,IAAAA,OAAO,CAAC2B,IAAR,CAAc,WAAUJ,EAAG,EAA3B;AACD,GAFD;;AAIA,SACE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAEtB,IADR;AAEE,IAAA,QAAQ,EAAEyB,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Catalog from '../components/Catalog';\r\nimport API from '../API';\r\nimport actions from '../actions/reducerActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst TRENDING = 'trending';\r\nconst POPULAR = 'popular';\r\nconst TOP = 'top';\r\nconst SEARCH = 'search';\r\n\r\nconst REQUEST_MAP = {\r\n  [TRENDING]: API.getTrending,\r\n  [POPULAR]: API.getPopular,\r\n  [TOP]: API.getTopRated,\r\n  [SEARCH]: API.getMovieByQuery\r\n}\r\n\r\nexport default function CatalogContainer({ history }) {\r\n  const data = useSelector(state => state.data);\r\n  const settings = useSelector(state => state.settings);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const { searchQuery, sorting, page } = settings;\r\n    const requstFuncKey = searchQuery.trim() ? SEARCH : sorting;\r\n    const requestFunc = REQUEST_MAP[requstFuncKey];\r\n\r\n    localStorage.setItem('page', page);\r\n    localStorage.setItem('sorting', sorting);\r\n\r\n    requestFunc(settings)\r\n    .then(({total_pages, results}) => {\r\n      dispatch(actions.setData(results));\r\n      dispatch(actions.setTotalPages(total_pages));\r\n\r\n      const additionalDataById = results.reduce((res, curr) => {\r\n        res[curr.id] = curr;\r\n        return res;\r\n      }, {});\r\n\r\n      dispatch(actions.setDataById({\r\n        ...dataById,\r\n        ...additionalDataById\r\n      }));\r\n    })\r\n  }, [settings]);\r\n\r\n\r\n  const redirect = id => {\r\n    history.push(`catalog/${id}`);\r\n  }\r\n\r\n  return (\r\n    <Catalog\r\n      data={data}\r\n      redirect={redirect}\r\n    />\r\n  )\r\n}\r\n\r\n// const mapStateToProps = (state, ownProps) => {\r\n//   return {\r\n//     data: state.appData.data,\r\n//     dataById: state.appData.dataById,\r\n//     totalPages: state.appData.totalPages\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch, ownProps) => {\r\n//   return {\r\n//     setData(data) {\r\n//       dispatch(appDataActions.setData(data))\r\n//     },\r\n//     setDataById(data) {\r\n//       dispatch(appDataActions.setDataById(data))\r\n//     },\r\n//     setTotalPages(data) {\r\n//       dispatch(appDataActions.setTotalPages(data))\r\n//     },\r\n//     redirect(id) {\r\n//       ownProps.history.push(`catalog/${id}`);\r\n//     }\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}